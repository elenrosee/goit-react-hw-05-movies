{"version":3,"sources":["components/Searchbar/Searchbar.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Searchbar/Searchbar.js","components/views/MoviesPage/MoviesPage.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Searchbar","setSearchingMovies","useState","request","setRequest","history","useHistory","location","useLocation","searchQueryUrl","URLSearchParams","search","get","useEffect","fetchMovieByName","then","results","className","styles","onSubmit","e","preventDefault","trim","alert","SearchForm","SearchForm_input","type","name","autoComplete","onChange","currentTarget","autoFocus","placeholder","SearchForm_button","SearchForm_button_label","memo","MoviesPage","searchingMovies","Container","MoviesList","arr"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,kBAAoB,qCAAqC,wBAA0B,2CAA2C,iBAAmB,oCAAoC,mBAAmB,sC,kHCD/R,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,mDC5BT,SAASQ,EAAT,GAA4C,IAAvBC,EAAsB,EAAtBA,mBACnB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cACVC,EAAWC,cAEXC,EAAiB,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,SAEhEC,qBAAU,WACHJ,GAILK,YAAiBL,GAAgBM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACvCf,EAAmB,YAAIe,SAExB,CAACP,EAAgBR,IAkBpB,OACE,qBAAKgB,UAAWC,IAAOlB,UAAvB,SACE,uBAAMmB,SAlBW,SAACC,GACpBA,EAAEC,iBAEElB,EAAQmB,QACVR,YAAiBX,GAASY,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAChCf,EAAmB,YAAIe,OAEzBX,EAAQhB,KAAR,OACKkB,GADL,IAEEI,OAAO,SAAD,OAAWR,OAGnBoB,MAAM,yBAMwBN,UAAWC,IAAOM,WAAhD,UACE,uBACEP,UAAWC,IAAOO,iBAClBC,KAAK,OACLC,KAAK,UACLC,aAAa,MACbC,SAAU,SAACT,GACThB,EAAWgB,EAAEU,cAAcxD,QAE7BA,MAAO6B,EACP4B,WAAS,EACTC,YAAY,iBAEd,wBAAQN,KAAK,SAAST,UAAWC,IAAOe,kBAAxC,SACE,sBAAMhB,UAAWC,IAAOgB,iCAOnBC,qBAAKnC,GCxDL,SAASoC,IACtB,MAA8ClC,mBAAS,IAAvD,mBAAOmC,EAAP,KAAwBpC,EAAxB,KAEA,OACE,eAACqC,EAAA,EAAD,WACE,cAAC,EAAD,CAAWrC,mBAAoBA,IAC/B,cAACsC,EAAA,EAAD,CAAYC,IAAKH","file":"static/js/7.562ba2b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2Ep_q\",\"SearchForm\":\"Searchbar_SearchForm__2I4mE\",\"SearchForm_button\":\"Searchbar_SearchForm_button__3YANn\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__5w37-\",\"SearchForm_input\":\"Searchbar_SearchForm_input__7oOGV\",\"SearchForm-input\":\"Searchbar_SearchForm-input__2VZGK\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { memo, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { fetchMovieByName } from \"../../Services/apiService\";\nimport styles from \"./Searchbar.module.scss\";\n\nfunction Searchbar({ setSearchingMovies }) {\n  const [request, setRequest] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchQueryUrl = new URLSearchParams(location.search).get(\"query\");\n\n  useEffect(() => {\n    if (!searchQueryUrl) {\n      return;\n    }\n\n    fetchMovieByName(searchQueryUrl).then(({ results }) => {\n      setSearchingMovies([...results]);\n    });\n  }, [searchQueryUrl, setSearchingMovies]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (request.trim()) {\n      fetchMovieByName(request).then(({ results }) => {\n        setSearchingMovies([...results]);\n      });\n      history.push({\n        ...location,\n        search: `query=${request}`,\n      });\n    } else {\n      alert(\"Enter search request\");\n    }\n  };\n\n  return (\n    <div className={styles.Searchbar}>\n      <form onSubmit={handleSubmit} className={styles.SearchForm}>\n        <input\n          className={styles.SearchForm_input}\n          type=\"text\"\n          name=\"request\"\n          autoComplete=\"off\"\n          onChange={(e) => {\n            setRequest(e.currentTarget.value);\n          }}\n          value={request}\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n        <button type=\"submit\" className={styles.SearchForm_button}>\n          <span className={styles.SearchForm_button_label}></span>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default memo(Searchbar);\n","import { useState } from \"react\";\nimport Container from \"../../Container\";\nimport MoviesList from \"../../MoviesList\";\nimport Searchbar from \"../../Searchbar\";\n\nexport default function MoviesPage() {\n  const [searchingMovies, setSearchingMovies] = useState([]);\n\n  return (\n    <Container>\n      <Searchbar setSearchingMovies={setSearchingMovies} />\n      <MoviesList arr={searchingMovies} />\n    </Container>\n  );\n}\n"],"sourceRoot":""}