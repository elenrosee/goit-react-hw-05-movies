{"version":3,"sources":["Services/apiService.js","components/MoviesList/MoviesList.js","components/views/HomePage/HomePage.module.scss","components/views/HomePage/HomePage.js"],"names":["KEY","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","query","period","fetchMovieById","movieId","fetchMovieByName","request","fetchMovieCastById","fetchMovieReviewsById","MoviesList","arr","location","useLocation","map","id","title","className","to","pathname","slugify","lower","state","prevPath","module","exports","HomePage","useState","trendingMovies","setTrendingMovies","useEffect","then","addTrendingMovies","results","styles","Title"],"mappings":"gVAAMA,EAAM,mCACNC,EAAW,gC,SAIFC,I,2EAAf,4CAAAC,EAAA,6DAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,oF,sBAOO,SAASC,EAAmBC,EAAOC,GACxC,OAAOb,EAAuB,GAAD,OACxBD,EADwB,oBACJa,EADI,YACKC,EADL,oBACuBf,IAI/C,SAASgB,EAAeC,GAC7B,OAAOf,EAAuB,GAAD,OAAID,EAAJ,iBAAqBgB,EAArB,oBAAwCjB,IAGhE,SAASkB,EAAiBC,GAC/B,OAAOjB,EAAuB,GAAD,OACxBD,EADwB,gCACQD,EADR,iCACoCmB,EADpC,gCAKxB,SAASC,EAAmBH,GACjC,OAAOf,EAAuB,GAAD,OACxBD,EADwB,iBACPgB,EADO,4BACoBjB,EADpB,oBAKxB,SAASqB,EAAsBJ,GACpC,OAAOf,EAAuB,GAAD,OACxBD,EADwB,iBACPgB,EADO,4BACoBjB,EADpB,6B,4GChChB,SAASsB,EAAT,GAA8B,IAARC,EAAO,EAAPA,IAC7BC,EAAWC,cAEjB,OACE,6BACGF,EAAIG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACP,oBAAaC,UAAU,mBAAvB,SACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaC,IAAQ,GAAD,OAAIJ,EAAJ,YAAaD,GAAM,CAAEM,OAAO,KACxDC,MAAO,CAAEC,SAAUX,IAHvB,SAMGI,KAPID,U,mBCRjBS,EAAOC,QAAU,CAAC,MAAQ,0B,kJCKX,SAASC,IACtB,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WACR7B,YAAmB,QAAS,OAAO8B,KAAKC,KACvC,IAEH,IAAMA,EAAoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3BJ,EAAkB,YAAII,KAGxB,OACE,eAAC,WAAD,WACE,oBAAIhB,UAAWiB,IAAOC,MAAtB,4BACA,cAACzB,EAAA,EAAD,CAAYC,IAAKiB","file":"static/js/HomePage.0725fec5.chunk.js","sourcesContent":["const KEY = \"357b0f432d66a0bd560e276035046b29\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\n//fetch(`${BASE_URL}api_key=${KEY}`)\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovie(query, period) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/${query}/${period}?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieByName(request) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${request}&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieCastById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviewsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport slugify from \"slugify\";\n\nexport default function MoviesList({ arr }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {arr.map(({ id, title }) => (\n        <li key={id} className=\"ImageGalleryItem\">\n          <Link\n            to={{\n              pathname: `/movies/${slugify(`${title} ${id}`, { lower: true })}`,\n              state: { prevPath: location },\n            }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"HomePage_Title__38rxg\"};","import { useState, useEffect, Fragment } from \"react\";\nimport { fetchTrendingMovie } from \"../../../Services/apiService\";\nimport styles from \"./HomePage.module.scss\";\n\nimport MoviesList from \"../../MoviesList\";\n\nexport default function HomePage() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovie(\"movie\", \"day\").then(addTrendingMovies);\n  }, []);\n\n  const addTrendingMovies = ({ results }) => {\n    setTrendingMovies([...results]);\n  };\n\n  return (\n    <Fragment>\n      <h1 className={styles.Title}>Trending today</h1>\n      <MoviesList arr={trendingMovies} />\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}